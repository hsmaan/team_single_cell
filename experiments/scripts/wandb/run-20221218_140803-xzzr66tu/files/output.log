
Reading dataset...
Feature selecting GEX...
 UserWarning:/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/scanpy/preprocessing/_highly_variable_genes.py:64: `flavor='seurat_v3'` expects raw count data, but non-integers were found.
Trying to set attribute `._uns` of view, copying.
Feature selecting ATAC...
Trying to set attribute `.var` of view, copying.
New GEX dim: 2500;
New ATAC dim: 10002;
AnnData dataset's shape: (69249, 12502)
Initializing dataset and dataloader...
The order of labels: ['s1d1', 's1d1', 's1d1', 's1d1', 's1d1', ..., 's4d9', 's4d9', 's4d9', 's4d9', 's4d9']
Length: 69249
Categories (13, object): ['s1d1', 's1d2', 's1d3', 's2d1', ..., 's3d10', 's4d1', 's4d8', 's4d9']
The device: cuda;
The model: DeepGexAtacMultiModalAutoencoder(
  (gex_encoder): Sequential(
    (0): Linear(in_features=2500, out_features=1000, bias=True)
    (1): BatchNorm1d(1000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=1000, out_features=800, bias=True)
    (5): BatchNorm1d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=800, out_features=600, bias=True)
    (8): BatchNorm1d(600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=600, out_features=400, bias=True)
    (12): BatchNorm1d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU()
    (14): Linear(in_features=400, out_features=200, bias=True)
    (15): BatchNorm1d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU()
    (17): Dropout(p=0.1, inplace=False)
    (18): Linear(in_features=200, out_features=64, bias=True)
    (19): ReLU()
  )
  (atac_encoder): Sequential(
    (0): Linear(in_features=10002, out_features=1200, bias=True)
    (1): BatchNorm1d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=1200, out_features=900, bias=True)
    (5): BatchNorm1d(900, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=900, out_features=600, bias=True)
    (8): BatchNorm1d(600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=600, out_features=400, bias=True)
    (12): BatchNorm1d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU()
    (14): Linear(in_features=400, out_features=150, bias=True)
    (15): BatchNorm1d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU()
    (17): Dropout(p=0.1, inplace=False)
    (18): Linear(in_features=150, out_features=64, bias=True)
    (19): ReLU()
  )
  (gex_decoder): Sequential(
    (0): Linear(in_features=128, out_features=10, bias=True)
    (1): BatchNorm1d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=10, out_features=30, bias=True)
    (5): BatchNorm1d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=30, out_features=50, bias=True)
    (8): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=50, out_features=100, bias=True)
    (12): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU()
    (14): Linear(in_features=100, out_features=160, bias=True)
    (15): BatchNorm1d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU()
    (17): Dropout(p=0.1, inplace=False)
    (18): Linear(in_features=160, out_features=2500, bias=True)
    (19): ReLU()
  )
  (atac_decoder): Sequential(
    (0): Linear(in_features=128, out_features=15, bias=True)
    (1): BatchNorm1d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=15, out_features=40, bias=True)
    (5): BatchNorm1d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=40, out_features=60, bias=True)
    (8): BatchNorm1d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=60, out_features=100, bias=True)
    (12): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU()
    (14): Linear(in_features=100, out_features=180, bias=True)
    (15): BatchNorm1d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU()
    (17): Dropout(p=0.1, inplace=False)
    (18): Linear(in_features=180, out_features=10002, bias=True)
    (19): Sigmoid()
  )
);
The dataset: <datasets.anndatadataset.AnnDataDataset object at 0x7f37689cdd10>;
The optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 1e-05
    weight_decay: 0.06274797069974031
);
Epoch 0 recon loss: 11472.5572423436
Epoch 1 recon loss: 11539.3332990824
Epoch 2 recon loss: 11750.3664728354
Epoch 3 recon loss: 11834.1708908396
Epoch 4 recon loss: 11524.2756591579
Epoch 5 recon loss: 11302.3356661705
Epoch 6 recon loss: 11628.4409549165
Epoch 7 recon loss: 11395.1799019284
Epoch 8 recon loss: 11691.6967932887
Epoch 9 recon loss: 10493.1004850552
Epoch 10 recon loss: 11666.2079699451
Epoch 11 recon loss: 11383.8427748567
Epoch 12 recon loss: 11653.4027638572
Epoch 13 recon loss: 11315.3724710177
Epoch 14 recon loss: 11406.5842586669
Epoch 15 recon loss: 11195.5870445159
Epoch 16 recon loss: 11792.5910121862
Epoch 17 recon loss: 11767.4239584593
Epoch 18 recon loss: 11520.0561067551
Epoch 19 recon loss: 11664.7850240508
Epoch 20 recon loss: 11613.606480738
Epoch 21 recon loss: 11655.3573666267
Epoch 22 recon loss: 11592.3102860771
Epoch 23 recon loss: 11706.9140915324
Epoch 24 recon loss: 11677.0752648215
Epoch 25 recon loss: 11171.4758507672
Epoch 26 recon loss: 11712.8597639268
Epoch 27 recon loss: 11089.360346042
Epoch 28 recon loss: 11595.005175862
Epoch 29 recon loss: 11821.997981738
Epoch 30 recon loss: 11807.1860196918
Epoch 31 recon loss: 11337.1241026241
Epoch 32 recon loss: 11426.8061637137
Epoch 33 recon loss: 11784.9132918053
Epoch 34 recon loss: 11418.2942439502
Epoch 35 recon loss: 11006.3620314036
Epoch 36 recon loss: 11626.4738060573
Epoch 37 recon loss: 11375.0375892633
Epoch 38 recon loss: 11768.9264941602
Epoch 39 recon loss: 11785.4101009222
Epoch 40 recon loss: 11754.4823735384
Epoch 41 recon loss: 11596.3565010025
Epoch 42 recon loss: 11736.1832599509
Epoch 43 recon loss: 11679.9271766085
Epoch 44 recon loss: 11212.936222819
Epoch 45 recon loss: 11576.0209345341
Epoch 46 recon loss: 11376.1263428403
Epoch 47 recon loss: 11412.8261324983
Epoch 48 recon loss: 11487.8179077781
Epoch 49 recon loss: 11475.624071306
Epoch 50 recon loss: 11698.7034694623
Epoch 51 recon loss: 11161.2624244515
Epoch 52 recon loss: 11473.8265469581
Epoch 53 recon loss: 11737.5625690087
Epoch 54 recon loss: 11606.8458059852
Epoch 55 recon loss: 11708.4908180885
Epoch 56 recon loss: 11647.07659142
Epoch 57 recon loss: 11614.547076099
Epoch 58 recon loss: 11293.3317831926
Epoch 59 recon loss: 11777.5808240915
Latent space type: <class 'numpy.ndarray'>;
GEX encoded shape: torch.Size([69249, 64]);
ATAC encoded shape: torch.Size([69249, 64]);
