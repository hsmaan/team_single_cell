
Reading dataset...
Feature selecting GEX...
 UserWarning:/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/scanpy/preprocessing/_highly_variable_genes.py:64: `flavor='seurat_v3'` expects raw count data, but non-integers were found.
Trying to set attribute `._uns` of view, copying.
Feature selecting ATAC...
Trying to set attribute `.var` of view, copying.
New GEX dim: 1000;
New ATAC dim: 5001;
AnnData dataset's shape: (69249, 6001)
Initializing dataset and dataloader...
The order of labels: ['s1d1', 's1d1', 's1d1', 's1d1', 's1d1', ..., 's4d9', 's4d9', 's4d9', 's4d9', 's4d9']
Length: 69249
Categories (13, object): ['s1d1', 's1d2', 's1d3', 's2d1', ..., 's3d10', 's4d1', 's4d8', 's4d9']
The device: cuda;
The model: DeepGexAtacMultiModalAutoencoder(
  (gex_encoder): Sequential(
    (0): Linear(in_features=1000, out_features=1000, bias=True)
    (1): BatchNorm1d(1000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=1000, out_features=200, bias=True)
    (5): BatchNorm1d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=200, out_features=5, bias=True)
    (8): ReLU()
  )
  (atac_encoder): Sequential(
    (0): Linear(in_features=5001, out_features=2000, bias=True)
    (1): BatchNorm1d(2000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=2000, out_features=400, bias=True)
    (5): BatchNorm1d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=400, out_features=5, bias=True)
    (8): ReLU()
  )
  (gex_decoder): Sequential(
    (0): Linear(in_features=10, out_features=50, bias=True)
    (1): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=50, out_features=100, bias=True)
    (5): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=100, out_features=1000, bias=True)
    (8): ReLU()
  )
  (atac_decoder): Sequential(
    (0): Linear(in_features=10, out_features=100, bias=True)
    (1): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=100, out_features=300, bias=True)
    (5): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=300, out_features=5001, bias=True)
    (8): Sigmoid()
  )
);
The dataset: <datasets.anndatadataset.AnnDataDataset object at 0x7fe6c76f7590>;
The optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 1e-05
    weight_decay: 0.08850299600081613
);
Epoch 0 recon loss: 4760.0751680228
Epoch 1 recon loss: 4822.5736322645
Epoch 2 recon loss: 4930.0188388957
Epoch 3 recon loss: 4822.5299969777
Epoch 4 recon loss: 4654.2946209314
Epoch 5 recon loss: 4887.0135351082
Epoch 6 recon loss: 4935.8693049339
Epoch 7 recon loss: 4851.7635252759
Epoch 8 recon loss: 4851.3387342149
Epoch 9 recon loss: 4882.1067693416
Epoch 10 recon loss: 4646.0970166281
Epoch 11 recon loss: 4777.5346738309
Epoch 12 recon loss: 4664.9595702565
Epoch 13 recon loss: 4837.788526224
Epoch 14 recon loss: 4704.8549556356
Epoch 15 recon loss: 4885.7719512251
Epoch 16 recon loss: 4798.6242733448
Epoch 17 recon loss: 4880.4431397989
Epoch 18 recon loss: 4699.0862676389
Epoch 19 recon loss: 4911.5129330737
Epoch 20 recon loss: 4739.3965886726
Epoch 21 recon loss: 4796.2496462994
Epoch 22 recon loss: 4930.331640701
Epoch 23 recon loss: 4687.0873679301
Epoch 24 recon loss: 4830.0358249764
Epoch 25 recon loss: 4741.4362485356
Epoch 26 recon loss: 4814.9929432873
Epoch 27 recon loss: 4916.1274811089
Epoch 28 recon loss: 4831.8878607946
Epoch 29 recon loss: 4662.0644589791
Epoch 30 recon loss: 4710.2990327944
Epoch 31 recon loss: 4784.625698837
Epoch 32 recon loss: 4753.7097851443
Epoch 33 recon loss: 4596.9536514051
Epoch 34 recon loss: 4847.2516557444
Epoch 35 recon loss: 4882.079020264
Epoch 36 recon loss: 4845.2930781422
Epoch 37 recon loss: 4887.903385917
Epoch 38 recon loss: 4850.8394871683
Epoch 39 recon loss: 4842.1953827753
Epoch 40 recon loss: 4879.2053548955
Epoch 41 recon loss: 4685.0819001842
Epoch 42 recon loss: 4781.8991023468
Epoch 43 recon loss: 4880.3768302509
Epoch 44 recon loss: 4886.7285502635
Epoch 45 recon loss: 4855.2872817976
Epoch 46 recon loss: 4919.508884625
Epoch 47 recon loss: 4686.2123030921
Epoch 48 recon loss: 4667.8881750179
Epoch 49 recon loss: 4859.186885847
Epoch 50 recon loss: 4804.3000952326
Epoch 51 recon loss: 4862.3341852993
Epoch 52 recon loss: 4686.6731477986
Epoch 53 recon loss: 4787.6513470226
Epoch 54 recon loss: 4749.248340771
Epoch 55 recon loss: 4879.86178219
Epoch 56 recon loss: 4925.8253838076
Epoch 57 recon loss: 4695.3906485715
Epoch 58 recon loss: 4802.7890672675
Epoch 59 recon loss: 4842.4058508515
Latent space type: <class 'numpy.ndarray'>;
GEX encoded shape: torch.Size([69249, 5]);
ATAC encoded shape: torch.Size([69249, 5]);
Latent space shape: (69249, 10);
0.42428615809983916
   celltype_ari  celltype_ami  ...  batch_homogeneity  batch_complete
0      0.019351      0.090627  ...           0.899532        0.945836
[1 rows x 8 columns]
 FutureWarning:/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/anndata/_core/anndata.py:1228: The `inplace` parameter in pandas.Categorical.reorder_categories is deprecated and will be removed in a future version. Reordering categories will always return a new Categorical object.
... storing 'feature_types' as categorical
 FutureWarning:/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/anndata/_core/anndata.py:1228: The `inplace` parameter in pandas.Categorical.reorder_categories is deprecated and will be removed in a future version. Reordering categories will always return a new Categorical object.
... storing 'gene_id' as categorical