
Reading dataset...
Feature selecting GEX...
 UserWarning:/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/scanpy/preprocessing/_highly_variable_genes.py:64: `flavor='seurat_v3'` expects raw count data, but non-integers were found.
Trying to set attribute `._uns` of view, copying.
Feature selecting ATAC...
Trying to set attribute `.var` of view, copying.
New GEX dim: 1000;
New ATAC dim: 7502;
AnnData dataset's shape: (69249, 8502)
Initializing dataset and dataloader...
The order of labels: ['s1d1', 's1d1', 's1d1', 's1d1', 's1d1', ..., 's4d9', 's4d9', 's4d9', 's4d9', 's4d9']
Length: 69249
Categories (13, object): ['s1d1', 's1d2', 's1d3', 's2d1', ..., 's3d10', 's4d1', 's4d8', 's4d9']
The device: cuda;
The model: DeepGexAtacMultiModalAutoencoder(
  (gex_encoder): Sequential(
    (0): Linear(in_features=1000, out_features=1200, bias=True)
    (1): BatchNorm1d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=1200, out_features=400, bias=True)
    (5): BatchNorm1d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=400, out_features=100, bias=True)
    (8): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=100, out_features=10, bias=True)
    (12): ReLU()
  )
  (atac_encoder): Sequential(
    (0): Linear(in_features=7502, out_features=1600, bias=True)
    (1): BatchNorm1d(1600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=1600, out_features=600, bias=True)
    (5): BatchNorm1d(600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=600, out_features=120, bias=True)
    (8): BatchNorm1d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=120, out_features=10, bias=True)
    (12): ReLU()
  )
  (gex_decoder): Sequential(
    (0): Linear(in_features=20, out_features=50, bias=True)
    (1): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=50, out_features=100, bias=True)
    (5): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=100, out_features=200, bias=True)
    (8): BatchNorm1d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=200, out_features=1000, bias=True)
    (12): ReLU()
  )
  (atac_decoder): Sequential(
    (0): Linear(in_features=20, out_features=60, bias=True)
    (1): BatchNorm1d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=60, out_features=100, bias=True)
    (5): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=100, out_features=150, bias=True)
    (8): BatchNorm1d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=150, out_features=7502, bias=True)
    (12): Sigmoid()
  )
);
The dataset: <datasets.anndatadataset.AnnDataDataset object at 0x7f30ea3926d0>;
The optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.014956203826877146
);
Epoch 0 recon loss: 3379.5267708161
Epoch 1 recon loss: 3390.9030664789
Epoch 2 recon loss: 3354.1786830451
Epoch 3 recon loss: 3306.8478043897
Epoch 4 recon loss: 3393.8091050849
Epoch 5 recon loss: 3350.8410700914
Epoch 6 recon loss: 3398.9121661689
Epoch 7 recon loss: 3314.4754579926
Epoch 8 recon loss: 3469.0613014412
Epoch 9 recon loss: 3357.223773158
Epoch 10 recon loss: 3135.1648496715
Epoch 11 recon loss: 3305.9294300625
Epoch 12 recon loss: 3286.7049009153
Epoch 13 recon loss: 3267.8845512823
Epoch 14 recon loss: 3290.0797520182
Epoch 15 recon loss: 3372.6476027152
Epoch 16 recon loss: 3394.4871925641
Epoch 17 recon loss: 3300.4460439195
Epoch 18 recon loss: 3311.5625439206
Epoch 19 recon loss: 3079.3667966728
Epoch 20 recon loss: 3231.6656708923
Epoch 21 recon loss: 3169.6248254283
Epoch 22 recon loss: 3262.2549049757
Epoch 23 recon loss: 3183.6342622321
Epoch 24 recon loss: 3252.1248869138
Epoch 25 recon loss: 3095.1656879723
Epoch 26 recon loss: 3274.9700859723
Epoch 27 recon loss: 3191.1222942195
Epoch 28 recon loss: 3265.8678596108
Epoch 29 recon loss: 3322.5262687034
Epoch 30 recon loss: 3160.9986760582
Epoch 31 recon loss: 3265.3067926486
Epoch 32 recon loss: 3149.5679663583
Epoch 33 recon loss: 3074.7425570585
Epoch 34 recon loss: 3262.0672795837
Epoch 35 recon loss: 3252.9536876533
Epoch 36 recon loss: 3003.5925155776
Epoch 37 recon loss: 3202.0702292014
Epoch 38 recon loss: 3128.6306045334
Epoch 39 recon loss: 3191.5181942535
Latent space type: <class 'numpy.ndarray'>;
Latent space type: <class 'numpy.ndarray'>;
GEX encoded shape: torch.Size([69249, 10]);
ATAC encoded shape: torch.Size([69249, 10]);
Latent space shape: (69249, 20);
0.521400203777519
   celltype_ari  celltype_ami  ...  batch_homogeneity  batch_complete
0        0.1153      0.336901  ...           0.819123        0.873232
[1 rows x 8 columns]
 FutureWarning:/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/anndata/_core/anndata.py:1228: The `inplace` parameter in pandas.Categorical.reorder_categories is deprecated and will be removed in a future version. Reordering categories will always return a new Categorical object.
... storing 'feature_types' as categorical
 FutureWarning:/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/anndata/_core/anndata.py:1228: The `inplace` parameter in pandas.Categorical.reorder_categories is deprecated and will be removed in a future version. Reordering categories will always return a new Categorical object.
... storing 'gene_id' as categorical