
Reading dataset...
Feature selecting GEX...
 UserWarning:/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/scanpy/preprocessing/_highly_variable_genes.py:64: `flavor='seurat_v3'` expects raw count data, but non-integers were found.
Trying to set attribute `._uns` of view, copying.
Feature selecting ATAC...
Trying to set attribute `.var` of view, copying.
New GEX dim: 1000;
New ATAC dim: 5001;
AnnData dataset's shape: (69249, 6001)
Initializing dataset and dataloader...
The order of labels: ['s1d1', 's1d1', 's1d1', 's1d1', 's1d1', ..., 's4d9', 's4d9', 's4d9', 's4d9', 's4d9']
Length: 69249
Categories (13, object): ['s1d1', 's1d2', 's1d3', 's2d1', ..., 's3d10', 's4d1', 's4d8', 's4d9']
The device: cuda;
The model: DeepGexAtacMultiModalAutoencoder(
  (gex_encoder): Sequential(
    (0): Linear(in_features=1000, out_features=1200, bias=True)
    (1): BatchNorm1d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=1200, out_features=400, bias=True)
    (5): BatchNorm1d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=400, out_features=100, bias=True)
    (8): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=100, out_features=32, bias=True)
    (12): ReLU()
  )
  (atac_encoder): Sequential(
    (0): Linear(in_features=5001, out_features=1600, bias=True)
    (1): BatchNorm1d(1600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=1600, out_features=600, bias=True)
    (5): BatchNorm1d(600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=600, out_features=120, bias=True)
    (8): BatchNorm1d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=120, out_features=32, bias=True)
    (12): ReLU()
  )
  (gex_decoder): Sequential(
    (0): Linear(in_features=64, out_features=50, bias=True)
    (1): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=50, out_features=100, bias=True)
    (5): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=100, out_features=200, bias=True)
    (8): BatchNorm1d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=200, out_features=1000, bias=True)
    (12): ReLU()
  )
  (atac_decoder): Sequential(
    (0): Linear(in_features=64, out_features=60, bias=True)
    (1): BatchNorm1d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=60, out_features=100, bias=True)
    (5): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=100, out_features=150, bias=True)
    (8): BatchNorm1d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=150, out_features=5001, bias=True)
    (12): Sigmoid()
  )
);
The dataset: <datasets.anndatadataset.AnnDataDataset object at 0x7fd49e98ba10>;
The optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 1e-05
    weight_decay: 0.07283535417370661
);
Epoch 0 recon loss: 29602.9347340761
Epoch 1 recon loss: 27832.5926401002
Epoch 2 recon loss: 29106.2911729632
Epoch 3 recon loss: 29183.6329567991
Epoch 4 recon loss: 28928.2032754193
Epoch 5 recon loss: 28965.1375784111
Epoch 6 recon loss: 29456.3733679066
Epoch 7 recon loss: 28784.8604202851
Epoch 8 recon loss: 28956.9971329277
Epoch 9 recon loss: 28109.6934072099
Epoch 10 recon loss: 29904.6229622528
Epoch 11 recon loss: 29127.5689794477
Epoch 12 recon loss: 28679.2837150307
Epoch 13 recon loss: 28168.651179746
Epoch 14 recon loss: 28770.4607335903
Epoch 15 recon loss: 29233.4902726321
Epoch 16 recon loss: 29088.3203276436
Epoch 17 recon loss: 29031.0447790648
Epoch 18 recon loss: 28966.1538890632
Epoch 19 recon loss: 29478.0901956331
Epoch 20 recon loss: 27614.5002464713
Epoch 21 recon loss: 27715.4144287283
Epoch 22 recon loss: 29154.9826769159
Epoch 23 recon loss: 27927.0025907793
Epoch 24 recon loss: 28974.303997772
Epoch 25 recon loss: 27865.8470184854
Epoch 26 recon loss: 28648.4094596957
Epoch 27 recon loss: 29124.3448748747
Epoch 28 recon loss: 28593.889313599
Epoch 29 recon loss: 29232.9674565947
Epoch 30 recon loss: 29217.416086038
Epoch 31 recon loss: 29282.6753639842
Epoch 32 recon loss: 28627.8075554443
Epoch 33 recon loss: 28338.3826793131
Epoch 34 recon loss: 28985.4915903069
Epoch 35 recon loss: 28829.6147890363
Epoch 36 recon loss: 28911.3670634854
Epoch 37 recon loss: 28170.6981413869
Epoch 38 recon loss: 26984.9260727956
Epoch 39 recon loss: 28488.8952568324
Epoch 40 recon loss: 28932.8243690588
Epoch 41 recon loss: 28891.709720406
Epoch 42 recon loss: 29017.4693987601
Epoch 43 recon loss: 27639.7395125818
Epoch 44 recon loss: 28501.730049957
Epoch 45 recon loss: 27902.4425240557
Epoch 46 recon loss: 28245.1120670592
Epoch 47 recon loss: 28989.1295316457
Epoch 48 recon loss: 28649.6629345463
Epoch 49 recon loss: 28220.756328143
Epoch 50 recon loss: 28651.7494414187
Epoch 51 recon loss: 27621.0036068547
Epoch 52 recon loss: 27540.9513952233
Epoch 53 recon loss: 28349.4020446265
Epoch 54 recon loss: 27761.9834992014
Epoch 55 recon loss: 29151.2912518707
Epoch 56 recon loss: 29186.8858594597
Epoch 57 recon loss: 27997.2342462569
Epoch 58 recon loss: 27030.516779974
Epoch 59 recon loss: 28399.7499431593
Latent space type: <class 'numpy.ndarray'>;
GEX encoded shape: torch.Size([69249, 32]);
ATAC encoded shape: torch.Size([69249, 32]);
