
Reading dataset...
Feature selecting GEX...
 UserWarning:/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/scanpy/preprocessing/_highly_variable_genes.py:64: `flavor='seurat_v3'` expects raw count data, but non-integers were found.
Trying to set attribute `._uns` of view, copying.
Feature selecting ATAC...
Trying to set attribute `.var` of view, copying.
New GEX dim: 5000;
New ATAC dim: 2501;
AnnData dataset's shape: (69249, 7501)
Initializing dataset and dataloader...
The order of labels: ['s1d1', 's1d1', 's1d1', 's1d1', 's1d1', ..., 's4d9', 's4d9', 's4d9', 's4d9', 's4d9']
Length: 69249
Categories (13, object): ['s1d1', 's1d2', 's1d3', 's2d1', ..., 's3d10', 's4d1', 's4d8', 's4d9']
The device: cuda;
The model: DeepGexAtacMultiModalAutoencoder(
  (gex_encoder): Sequential(
    (0): Linear(in_features=5000, out_features=1000, bias=True)
    (1): BatchNorm1d(1000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=1000, out_features=800, bias=True)
    (5): BatchNorm1d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=800, out_features=600, bias=True)
    (8): BatchNorm1d(600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=600, out_features=400, bias=True)
    (12): BatchNorm1d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU()
    (14): Linear(in_features=400, out_features=200, bias=True)
    (15): BatchNorm1d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU()
    (17): Dropout(p=0.1, inplace=False)
    (18): Linear(in_features=200, out_features=10, bias=True)
    (19): ReLU()
  )
  (atac_encoder): Sequential(
    (0): Linear(in_features=2501, out_features=1200, bias=True)
    (1): BatchNorm1d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=1200, out_features=900, bias=True)
    (5): BatchNorm1d(900, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=900, out_features=600, bias=True)
    (8): BatchNorm1d(600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=600, out_features=400, bias=True)
    (12): BatchNorm1d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU()
    (14): Linear(in_features=400, out_features=150, bias=True)
    (15): BatchNorm1d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU()
    (17): Dropout(p=0.1, inplace=False)
    (18): Linear(in_features=150, out_features=10, bias=True)
    (19): ReLU()
  )
  (gex_decoder): Sequential(
    (0): Linear(in_features=20, out_features=10, bias=True)
    (1): BatchNorm1d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=10, out_features=30, bias=True)
    (5): BatchNorm1d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=30, out_features=50, bias=True)
    (8): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=50, out_features=100, bias=True)
    (12): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU()
    (14): Linear(in_features=100, out_features=160, bias=True)
    (15): BatchNorm1d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU()
    (17): Dropout(p=0.1, inplace=False)
    (18): Linear(in_features=160, out_features=5000, bias=True)
    (19): ReLU()
  )
  (atac_decoder): Sequential(
    (0): Linear(in_features=20, out_features=15, bias=True)
    (1): BatchNorm1d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=15, out_features=40, bias=True)
    (5): BatchNorm1d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=40, out_features=60, bias=True)
    (8): BatchNorm1d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=60, out_features=100, bias=True)
    (12): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU()
    (14): Linear(in_features=100, out_features=180, bias=True)
    (15): BatchNorm1d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU()
    (17): Dropout(p=0.1, inplace=False)
    (18): Linear(in_features=180, out_features=2501, bias=True)
    (19): Sigmoid()
  )
);
The dataset: <datasets.anndatadataset.AnnDataDataset object at 0x7fe2a4ce9a50>;
The optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.06604508125887969
);
Epoch 0 recon loss: 3680.4169146917
Epoch 1 recon loss: 2883.937918548
Epoch 2 recon loss: 2412.6897824496
Epoch 3 recon loss: 2250.531095903
Epoch 4 recon loss: 2186.7249204497
Epoch 5 recon loss: 2307.6960012246
Epoch 6 recon loss: 2055.7985198187
Epoch 7 recon loss: 2146.1552070003
Epoch 8 recon loss: 1582.3479264407
Epoch 9 recon loss: 1681.243247044
Epoch 10 recon loss: 2923.6642536824
Epoch 11 recon loss: 2313.4768256452
Epoch 12 recon loss: 2279.2089201653
Epoch 13 recon loss: 2260.094922972
Epoch 14 recon loss: 2199.7124958118
Epoch 15 recon loss: 1925.6139176787
Epoch 16 recon loss: 2319.178935459
Epoch 17 recon loss: 1830.6839892856
Epoch 18 recon loss: 1544.6691711705
Epoch 19 recon loss: 1348.7715698659
Epoch 20 recon loss: 1624.1808747962
Epoch 21 recon loss: 1102.2083445004
Epoch 22 recon loss: 1535.955963492
Epoch 23 recon loss: 1123.1944610027
Epoch 24 recon loss: 1209.205469435
Epoch 25 recon loss: 2505.7800165111
Epoch 26 recon loss: 919.391590686
Epoch 27 recon loss: 1041.9294810718
Epoch 28 recon loss: 877.0359816499
Epoch 29 recon loss: 873.0878890664
Epoch 30 recon loss: 1072.3625426537
Epoch 31 recon loss: 793.0406225666
Epoch 32 recon loss: 868.8625811841
Epoch 33 recon loss: 908.1014419521
Epoch 34 recon loss: 1472.8521737799
Epoch 35 recon loss: 660.9051410614
Epoch 36 recon loss: 749.9965749899
Epoch 37 recon loss: 540.9763558111
Epoch 38 recon loss: 545.8239785262
Epoch 39 recon loss: 538.5244914858
Epoch 40 recon loss: 497.8551565747
Epoch 41 recon loss: 415.2764616631
Epoch 42 recon loss: 741.873054962
Epoch 43 recon loss: 549.4965291937
Epoch 44 recon loss: 788.816427164
Epoch 45 recon loss: 596.9903842682
Epoch 46 recon loss: 383.8666560828
Epoch 47 recon loss: 474.7237004977
Epoch 48 recon loss: 542.8637588762
Epoch 49 recon loss: 1327.1038106185
Epoch 50 recon loss: 930.1064086926
Epoch 51 recon loss: 644.0599594398
Epoch 52 recon loss: 813.6703781712
Epoch 53 recon loss: 481.2004692429
Epoch 54 recon loss: 398.0919167162
Epoch 55 recon loss: 390.6849006551
Epoch 56 recon loss: 328.3167323734
Epoch 57 recon loss: 358.9678713146
Epoch 58 recon loss: 443.3983702501
Epoch 59 recon loss: 458.568075786
Epoch 60 recon loss: 387.7543621461
Epoch 61 recon loss: 372.6376488038
Epoch 62 recon loss: 372.3683375721
Epoch 63 recon loss: 414.9476415565
Epoch 64 recon loss: 423.2014316814
Epoch 65 recon loss: 426.6741262059
Epoch 66 recon loss: 661.2806810339
Epoch 67 recon loss: 421.0257021158
Epoch 68 recon loss: 359.4106660999
Epoch 69 recon loss: 303.5724997617
Epoch 70 recon loss: 391.2330317617
Epoch 71 recon loss: 342.0363729387
Epoch 72 recon loss: 391.4684762944
Epoch 73 recon loss: 357.4614063122
Epoch 74 recon loss: 300.9640691751
Epoch 75 recon loss: 354.2060093343
Epoch 76 recon loss: 373.3343527911
Epoch 77 recon loss: 340.5867877435
Epoch 78 recon loss: 368.1754925647
Epoch 79 recon loss: 330.6344548211
Latent space type: <class 'numpy.ndarray'>;
GEX encoded shape: torch.Size([69249, 10]);
ATAC encoded shape: torch.Size([69249, 10]);
