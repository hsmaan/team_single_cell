/h/angelo/single-cell-proj/repo/team_single_cell/experiments/jobs
gpu056
Sun Dec 18 13:28:05 EST 2022
wandb: Starting wandb agent üïµÔ∏è
2022-12-18 13:28:13,430 - wandb.wandb_agent - INFO - Running runs: []
2022-12-18 13:28:13,816 - wandb.wandb_agent - INFO - Agent received command: run
2022-12-18 13:28:13,816 - wandb.wandb_agent - INFO - Agent starting run with config:
	adt_weight: 93.01688694665847
	epochs: 40
	gex_dim: 5000
	gex_weight: 28.68595865548955
	init: xavier
	latent_dim: 10
	lr: 0.0001
	model: [[1000, 800, 600, 400, 200], [10, 30, 50, 100, 160], [100, 90, 60, 40, 15], [20, 30, 40, 50, 60]]
	weight_decay: 0.07106790358236095
2022-12-18 13:28:13,821 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python gex_adt_sweep.py --adt_weight=93.01688694665847 --epochs=40 --gex_dim=5000 --gex_weight=28.68595865548955 --init=xavier --latent_dim=10 --lr=0.0001 "--model=[[1000, 800, 600, 400, 200], [10, 30, 50, 100, 160], [100, 90, 60, 40, 15], [20, 30, 40, 50, 60]]" --weight_decay=0.07106790358236095
wandb: Currently logged in as: ange1o5 (team-single-cell). Use `wandb login --relogin` to force relogin
wandb: WARNING Ignored wandb.init() arg project when running a sweep.
wandb: WARNING Ignored wandb.init() arg entity when running a sweep.
2022-12-18 13:28:18,832 - wandb.wandb_agent - INFO - Running runs: ['61ls5uss']
wandb: Tracking run with wandb version 0.13.7
wandb: Run data is saved locally in /ssd003/home/angelo/single-cell-proj/repo/team_single_cell/experiments/scripts/wandb/run-20221218_132817-61ls5uss
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run solar-sweep-1
wandb: ‚≠êÔ∏è View project at https://wandb.ai/team-single-cell/gex_adt_sweep
wandb: üßπ View sweep at https://wandb.ai/team-single-cell/gex_adt_sweep/sweeps/zwctbvrx
wandb: üöÄ View run at https://wandb.ai/team-single-cell/gex_adt_sweep/runs/61ls5uss
Variable names are not unique. To make them unique, call `.var_names_make_unique`.
 UserWarning:/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/scanpy/preprocessing/_highly_variable_genes.py:64: `flavor='seurat_v3'` expects raw count data, but non-integers were found.
Trying to set attribute `._uns` of view, copying.
Variable names are not unique. To make them unique, call `.var_names_make_unique`.
Reading dataset...
Feature selecting GEX...

New GEX dim: 5000;
New ADT dim: 134;
AnnData dataset's shape: (90261, 5134)

Initializing dataset and dataloader...
The order of labels: ['s1d1', 's1d1', 's1d1', 's1d1', 's1d1', ..., 's4d9', 's4d9', 's4d9', 's4d9', 's4d9']
Length: 90261
Categories (12, object): ['s1d1', 's1d2', 's1d3', 's2d1', ..., 's3d7', 's4d1', 's4d8', 's4d9']
The device: cuda;

The model: DeepGexAdtMultiModalAutoencoder(
  (gex_encoder): Sequential(
    (0): Linear(in_features=5000, out_features=1000, bias=True)
    (1): BatchNorm1d(1000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=1000, out_features=800, bias=True)
    (5): BatchNorm1d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=800, out_features=600, bias=True)
    (8): BatchNorm1d(600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=600, out_features=400, bias=True)
    (12): BatchNorm1d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU()
    (14): Linear(in_features=400, out_features=200, bias=True)
    (15): BatchNorm1d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU()
    (17): Dropout(p=0.1, inplace=False)
    (18): Linear(in_features=200, out_features=5, bias=True)
    (19): ReLU()
  )
  (adt_encoder): Sequential(
    (0): Linear(in_features=134, out_features=100, bias=True)
    (1): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=100, out_features=90, bias=True)
    (5): BatchNorm1d(90, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=90, out_features=60, bias=True)
    (8): BatchNorm1d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=60, out_features=40, bias=True)
    (12): BatchNorm1d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU()
    (14): Linear(in_features=40, out_features=15, bias=True)
    (15): BatchNorm1d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU()
    (17): Dropout(p=0.1, inplace=False)
    (18): Linear(in_features=15, out_features=5, bias=True)
    (19): ReLU()
  )
  (gex_decoder): Sequential(
    (0): Linear(in_features=10, out_features=10, bias=True)
    (1): BatchNorm1d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=10, out_features=30, bias=True)
    (5): BatchNorm1d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=30, out_features=50, bias=True)
    (8): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=50, out_features=100, bias=True)
    (12): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU()
    (14): Linear(in_features=100, out_features=160, bias=True)
    (15): BatchNorm1d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU()
    (17): Dropout(p=0.1, inplace=False)
    (18): Linear(in_features=160, out_features=5000, bias=True)
    (19): ReLU()
  )
  (adt_decoder): Sequential(
    (0): Linear(in_features=10, out_features=20, bias=True)
    (1): BatchNorm1d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=20, out_features=30, bias=True)
    (5): BatchNorm1d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=30, out_features=40, bias=True)
    (8): BatchNorm1d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=40, out_features=50, bias=True)
    (12): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU()
    (14): Linear(in_features=50, out_features=60, bias=True)
    (15): BatchNorm1d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU()
    (17): Dropout(p=0.1, inplace=False)
    (18): Linear(in_features=60, out_features=134, bias=True)
    (19): ReLU()
  )
);
The dataset: <datasets.anndatadataset.AnnDataDataset object at 0x7f0bbca16790>;
The optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.07106790358236095
);

Traceback (most recent call last):
  File "gex_adt_sweep.py", line 56, in <module>
    gex_adt_trainer.train(epochs=epochs, gex_loss_w=gex_weight, adt_loss_w=adt_weight, wandb_log=True)
  File "../../train.py", line 178, in train
    outs = self.autoencoder.forward(inputs)
  File "../../models/multimodal_autoencoder.py", line 285, in forward
    gex_Z = self.gex_encode(gex_X)
  File "../../models/multimodal_autoencoder.py", line 265, in gex_encode
    gex_Z = self.gex_encoder(gex_X)
  File "/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 541, in __call__
    result = self.forward(*input, **kwargs)
  File "/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/torch/nn/modules/container.py", line 92, in forward
    input = module(input)
  File "/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 541, in __call__
    result = self.forward(*input, **kwargs)
  File "/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/torch/nn/modules/batchnorm.py", line 81, in forward
    exponential_average_factor, self.eps)
  File "/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/torch/nn/functional.py", line 1670, in batch_norm
    training, momentum, eps, torch.backends.cudnn.enabled
RuntimeError: cuDNN error: CUDNN_STATUS_EXECUTION_FAILED
2022-12-18 13:42:32,256 - wandb.wandb_agent - INFO - Cleaning up finished run: 61ls5uss
wandb: Waiting for W&B process to finish... (failed 1). Press Control-C to abort syncing.
wandb: - 0.005 MB of 0.005 MB uploaded (0.000 MB deduped)wandb: \ 0.005 MB of 0.024 MB uploaded (0.000 MB deduped)wandb: | 0.024 MB of 0.024 MB uploaded (0.000 MB deduped)wandb: Synced solar-sweep-1: https://wandb.ai/team-single-cell/gex_adt_sweep/runs/61ls5uss
wandb: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20221218_132817-61ls5uss/logs
2022-12-18 13:42:36,788 - wandb.wandb_agent - INFO - Agent received command: run
2022-12-18 13:42:36,788 - wandb.wandb_agent - INFO - Agent starting run with config:
	adt_weight: 65.53682923016221
	epochs: 20
	gex_dim: 5000
	gex_weight: 62.9002765456264
	init: xavier
	latent_dim: 64
	lr: 0.0001
	model: [[1000, 800, 600, 400, 200], [10, 30, 50, 100, 160], [100, 90, 60, 40, 15], [20, 30, 40, 50, 60]]
	weight_decay: 0.08002474058565479
2022-12-18 13:42:36,792 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python gex_adt_sweep.py --adt_weight=65.53682923016221 --epochs=20 --gex_dim=5000 --gex_weight=62.9002765456264 --init=xavier --latent_dim=64 --lr=0.0001 "--model=[[1000, 800, 600, 400, 200], [10, 30, 50, 100, 160], [100, 90, 60, 40, 15], [20, 30, 40, 50, 60]]" --weight_decay=0.08002474058565479
2022-12-18 13:42:41,802 - wandb.wandb_agent - INFO - Running runs: ['1tpzxthd']
wandb: Currently logged in as: ange1o5 (team-single-cell). Use `wandb login --relogin` to force relogin
wandb: WARNING Ignored wandb.init() arg project when running a sweep.
wandb: WARNING Ignored wandb.init() arg entity when running a sweep.
wandb: Tracking run with wandb version 0.13.7
wandb: Run data is saved locally in /ssd003/home/angelo/single-cell-proj/repo/team_single_cell/experiments/scripts/wandb/run-20221218_134242-1tpzxthd
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run misunderstood-sweep-2
wandb: ‚≠êÔ∏è View project at https://wandb.ai/team-single-cell/gex_adt_sweep
wandb: üßπ View sweep at https://wandb.ai/team-single-cell/gex_adt_sweep/sweeps/zwctbvrx
wandb: üöÄ View run at https://wandb.ai/team-single-cell/gex_adt_sweep/runs/1tpzxthd
Variable names are not unique. To make them unique, call `.var_names_make_unique`.
 UserWarning:/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/scanpy/preprocessing/_highly_variable_genes.py:64: `flavor='seurat_v3'` expects raw count data, but non-integers were found.
Trying to set attribute `._uns` of view, copying.
Variable names are not unique. To make them unique, call `.var_names_make_unique`.
Reading dataset...
Feature selecting GEX...

New GEX dim: 5000;
New ADT dim: 134;
AnnData dataset's shape: (90261, 5134)

Initializing dataset and dataloader...
The order of labels: ['s1d1', 's1d1', 's1d1', 's1d1', 's1d1', ..., 's4d9', 's4d9', 's4d9', 's4d9', 's4d9']
Length: 90261
Categories (12, object): ['s1d1', 's1d2', 's1d3', 's2d1', ..., 's3d7', 's4d1', 's4d8', 's4d9']
The device: cuda;

The model: DeepGexAdtMultiModalAutoencoder(
  (gex_encoder): Sequential(
    (0): Linear(in_features=5000, out_features=1000, bias=True)
    (1): BatchNorm1d(1000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=1000, out_features=800, bias=True)
    (5): BatchNorm1d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=800, out_features=600, bias=True)
    (8): BatchNorm1d(600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=600, out_features=400, bias=True)
    (12): BatchNorm1d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU()
    (14): Linear(in_features=400, out_features=200, bias=True)
    (15): BatchNorm1d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU()
    (17): Dropout(p=0.1, inplace=False)
    (18): Linear(in_features=200, out_features=32, bias=True)
    (19): ReLU()
  )
  (adt_encoder): Sequential(
    (0): Linear(in_features=134, out_features=100, bias=True)
    (1): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=100, out_features=90, bias=True)
    (5): BatchNorm1d(90, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=90, out_features=60, bias=True)
    (8): BatchNorm1d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=60, out_features=40, bias=True)
    (12): BatchNorm1d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU()
    (14): Linear(in_features=40, out_features=15, bias=True)
    (15): BatchNorm1d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU()
    (17): Dropout(p=0.1, inplace=False)
    (18): Linear(in_features=15, out_features=32, bias=True)
    (19): ReLU()
  )
  (gex_decoder): Sequential(
    (0): Linear(in_features=64, out_features=10, bias=True)
    (1): BatchNorm1d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=10, out_features=30, bias=True)
    (5): BatchNorm1d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=30, out_features=50, bias=True)
    (8): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=50, out_features=100, bias=True)
    (12): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU()
    (14): Linear(in_features=100, out_features=160, bias=True)
    (15): BatchNorm1d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU()
    (17): Dropout(p=0.1, inplace=False)
    (18): Linear(in_features=160, out_features=5000, bias=True)
    (19): ReLU()
  )
  (adt_decoder): Sequential(
    (0): Linear(in_features=64, out_features=20, bias=True)
    (1): BatchNorm1d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.1, inplace=False)
    (4): Linear(in_features=20, out_features=30, bias=True)
    (5): BatchNorm1d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU()
    (7): Linear(in_features=30, out_features=40, bias=True)
    (8): BatchNorm1d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU()
    (10): Dropout(p=0.1, inplace=False)
    (11): Linear(in_features=40, out_features=50, bias=True)
    (12): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU()
    (14): Linear(in_features=50, out_features=60, bias=True)
    (15): BatchNorm1d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU()
    (17): Dropout(p=0.1, inplace=False)
    (18): Linear(in_features=60, out_features=134, bias=True)
    (19): ReLU()
  )
);
The dataset: <datasets.anndatadataset.AnnDataDataset object at 0x7f2efa3242d0>;
The optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.08002474058565479
);

wandb: Waiting for W&B process to finish... (failed 1). Press Control-C to abort syncing.
wandb: Synced misunderstood-sweep-2: https://wandb.ai/team-single-cell/gex_adt_sweep/runs/1tpzxthd
wandb: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20221218_134242-1tpzxthd/logs
Traceback (most recent call last):
  File "gex_adt_sweep.py", line 56, in <module>
    gex_adt_trainer.train(epochs=epochs, gex_loss_w=gex_weight, adt_loss_w=adt_weight, wandb_log=True)
  File "../../train.py", line 178, in train
    outs = self.autoencoder.forward(inputs)
  File "../../models/multimodal_autoencoder.py", line 285, in forward
    gex_Z = self.gex_encode(gex_X)
  File "../../models/multimodal_autoencoder.py", line 265, in gex_encode
    gex_Z = self.gex_encoder(gex_X)
  File "/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 541, in __call__
    result = self.forward(*input, **kwargs)
  File "/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/torch/nn/modules/container.py", line 92, in forward
    input = module(input)
  File "/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 541, in __call__
    result = self.forward(*input, **kwargs)
  File "/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/torch/nn/modules/batchnorm.py", line 81, in forward
    exponential_average_factor, self.eps)
  File "/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/torch/nn/functional.py", line 1670, in batch_norm
    training, momentum, eps, torch.backends.cudnn.enabled
RuntimeError: cuDNN error: CUDNN_STATUS_EXECUTION_FAILED
2022-12-18 13:58:45,282 - wandb.wandb_agent - INFO - Cleaning up finished run: 1tpzxthd
2022-12-18 13:58:45,474 - wandb.wandb_agent - INFO - Agent received command: run
2022-12-18 13:58:45,474 - wandb.wandb_agent - INFO - Agent starting run with config:
	adt_weight: 6.580801405897841
	epochs: 60
	gex_dim: 1000
	gex_weight: 33.70376938391602
	init: he
	latent_dim: 128
	lr: 0.01
	model: [[1000, 200], [50, 100], [100, 40], [10, 30]]
	weight_decay: 0.035148843745601746
2022-12-18 13:58:45,478 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python gex_adt_sweep.py --adt_weight=6.580801405897841 --epochs=60 --gex_dim=1000 --gex_weight=33.70376938391602 --init=he --latent_dim=128 --lr=0.01 "--model=[[1000, 200], [50, 100], [100, 40], [10, 30]]" --weight_decay=0.035148843745601746
2022-12-18 13:58:50,491 - wandb.wandb_agent - INFO - Running runs: ['jltuu99z']
wandb: Currently logged in as: ange1o5 (team-single-cell). Use `wandb login --relogin` to force relogin
wandb: WARNING Ignored wandb.init() arg project when running a sweep.
wandb: WARNING Ignored wandb.init() arg entity when running a sweep.
wandb: Tracking run with wandb version 0.13.7
wandb: Run data is saved locally in /ssd003/home/angelo/single-cell-proj/repo/team_single_cell/experiments/scripts/wandb/run-20221218_135850-jltuu99z
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run gallant-sweep-3
wandb: ‚≠êÔ∏è View project at https://wandb.ai/team-single-cell/gex_adt_sweep
wandb: üßπ View sweep at https://wandb.ai/team-single-cell/gex_adt_sweep/sweeps/zwctbvrx
wandb: üöÄ View run at https://wandb.ai/team-single-cell/gex_adt_sweep/runs/jltuu99z
Variable names are not unique. To make them unique, call `.var_names_make_unique`.
 UserWarning:/h/angelo/miniconda3/envs/single_cell_env/lib/python3.7/site-packages/scanpy/preprocessing/_highly_variable_genes.py:64: `flavor='seurat_v3'` expects raw count data, but non-integers were found.
Trying to set attribute `._uns` of view, copying.
slurmstepd: error: *** JOB 8874416 ON gpu056 CANCELLED AT 2022-12-18T14:04:35 ***
